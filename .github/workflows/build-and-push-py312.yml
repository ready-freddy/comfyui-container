name: Build & Push (py312 • cu128 • v4)

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag to push (e.g., cu128-py312-v4 or 2025-09-20a)"
        required: true
        default: "cu128-py312-v4"

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/comfyui-container
      IMAGE_TAG:  ${{ inputs.tag }}

    steps:
      - name: Check out branch
        uses: actions/checkout@v4

      - name: Free disk space on runner
        run: |
          set -euxo pipefail
          echo "Before:"; df -h || true
          docker system df || true
          docker ps -aq | xargs -r docker stop || true
          docker ps -aq | xargs -r docker rm   || true
          docker images -aq | xargs -r docker rmi -f || true
          docker builder prune -af || true
          docker system  prune -af --volumes || true
          sudo rm -rf /usr/local/lib/android  /usr/share/dotnet  /opt/ghc  /opt/hostedtoolcache || true
          echo "After:"; df -h || true
          docker system df || true

      - name: Set up Docker Buildx (fresh)
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: image=moby/buildkit:latest

      - name: Log Dockerfile snippet (first 120 lines)
        run: sed -n '1,120p' Dockerfile

      - name: Sanity check (refuse baked-venv/compile images)
        run: |
          ! grep -qE '(/opt/venvs|pip install (torch|onnxruntime|opencv)|FORCE_CUDA)' Dockerfile || { echo "Refusing to build baked-venv/compile image"; exit 1; }

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image (no cache)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
          no-cache: true
          pull: true
          provenance: false
          sbom: false

      - name: Announce
        run: |
          echo "✅ Pushed: ${IMAGE_NAME}:${IMAGE_TAG}"
          echo "Pull with: docker pull ${IMAGE_NAME}:${IMAGE_TAG}"
